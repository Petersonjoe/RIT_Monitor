#-*- coding: utf-8 -*-
import ConfigParser
import os
import csv
import json

class DecodeConfig(object):
    """this class is for read the config files,
       ./configuartions/db.config - used for fetching the connection string
       ./configurations/tableConfig/filename.csv - used for matching the web label to table field
    """
    _mappingDict = {}
    connString = ''

    def __init__(self, filename = "default"):
        self.filename = filename

    #@staticmethod
    def getConfig(self, section = "connectionManager", option = "RITMetrices", separator = ";"):
        '''type: 1 - .config, without parameter separator; 2 - .csv, default separator is ";"'''

        if ".config" in self.filename:
            config = ConfigParser.ConfigParser()
            path = './configurations/' + self.filename
            config.read(path)
            self.connString = config.get(section, option)
            if self.connString != '':
                return self.connString

        if ".csv" in self.filename:
            fileLocation = "./configurations/tableConfig/" + self.filename

            with open(fileLocation, 'rb') as csvfile:
                reader = csv.reader(csvfile, delimiter = separator)
                rows = [row for row in reader]
            
            for row in rows:
                if row[1] != 'Null':
                    self._mappingDict[row[1]] = row[0]        
            return self._mappingDict

    # define two module functions
    def jsonLoad(self, data, datafile):
        '''data type is dict
            datafile will be the file name
            will concatenate file path - ./data/datafile.json
        '''  
        filepath = "./data/" + datafile + ".json"  
        try:
            with open(filepath, "w") as wf:
                json.dump(data, wf)
        except Exception, ex:
            print ex.message
            print "datafile write failed!"

    def jsonParse(self, datafile):
        '''filepath will be the one generated by jsonLoad method
            sample - ./data/dataname.json
            just for read data into a dict variable
        '''
        filepath = "./data/" + datafile + ".json"
        try:
            with open(filepath, "r") as lf:
                data = json.load(lf)
            return data
        except Exception, ex:
            print ex.message
            print "====== Datafile Read Failed! ======"